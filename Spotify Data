# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

--#1 What are the top 3 songs on spotify as well as their song title ?
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc LIMIT 3;

--#2 Which artists have two or more songs on the list?
SELECT artist_name, COUNT(artist_name) as appearance
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING appearance>=2
ORDER BY appearance desc;

--#3 What song(s) does Ariana Grande have on the list?
SELECT track_name
FROM BIT_DB.Spotifydata
WHERE artist_name='Ariana Grande';

--#4 What is the average danceability of Olvia Rodrigo's songs on the list?
SELECT AVG(danceability) avg_danceability_Olvia_Rodrigo
FROM BIT_DB.Spotifydata
WHERE artist_name='Olivia Rodrigo'
GROUP BY artist_name;

--#5 Which artist had the least energetic song on the list?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY energy asc LIMIT 1;

--#6 Which artist had the shortest song, and what is the track name?
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc LIMIT 1;

--#7 What's the average danceability for the 1o most posbular songs?
SELECT AVG(danceability) as avg_danceability_top10
FROM BIT_DB.Spotifydata
ORDER BY popularity desc LIMIT 10;

